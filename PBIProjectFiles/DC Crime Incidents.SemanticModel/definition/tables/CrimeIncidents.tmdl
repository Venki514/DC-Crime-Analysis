table CrimeIncidents
	lineageTag: e7701779-9691-4e3c-b476-09247b9f185c

	measure 'Total Incidents' = COUNTROWS('CrimeIncidents')
		formatString: #,0
		displayFolder: Core Metrics
		lineageTag: bc2fa0e6-56d2-436a-9ee9-0504aa9e6ef1

	measure 'Avg Crimes per Day' = DIVIDE([Total Incidents], DISTINCTCOUNT('dimDate'[Date]))
		displayFolder: Core Metrics
		lineageTag: b2565843-69a9-4a93-ac57-e9e58641abfa

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Crimes Today' = CALCULATE([Total Incidents], CrimeIncidents[START_DATE_ONLY] = TODAY())
		formatString: 0
		displayFolder: Core Metrics
		lineageTag: 93cb3bcd-96e1-465f-83df-2471f8893d8e

	measure '7D Avg Crimes' = AVERAGEX(DATESINPERIOD('dimDate'[Date], MAX('dimDate'[Date]), -7, DAY), [Total Incidents])
		displayFolder: Core Metrics
		lineageTag: 4752067b-9918-46db-b2c3-6cef4c7210d5

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '% Change vs Last Month' = ```
			
			VAR Crimes_Last_Month = 
			    CALCULATE([Total Incidents], PARALLELPERIOD('dimDate'[Date], -1, MONTH))
			RETURN
			    DIVIDE([Total Incidents] - Crimes_Last_Month, Crimes_Last_Month)
			```
		displayFolder: Core Metrics
		lineageTag: 2229bedb-13a7-4eed-ad5c-402ad3d874ab

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '% Change vs Last Week' = ```
			
			VAR MaxDate = MAX('dimDate'[Date])
			VAR StartOfThisWeek = MaxDate - WEEKDAY(MaxDate, 2) + 1   -- 2 = Monday
			VAR StartOfLastWeek = StartOfThisWeek - 7
			VAR EndOfLastWeek = StartOfThisWeek - 1
			
			VAR Crimes_Last_Week =
			    CALCULATE(
			        [Total Incidents],
			        'dimDate'[Date] >= StartOfLastWeek && 'dimDate'[Date] <= EndOfLastWeek
			    )
			
			RETURN
			    DIVIDE([Total Incidents] - Crimes_Last_Week, Crimes_Last_Week)
			
			```
		displayFolder: Core Metrics
		lineageTag: 0f38962e-7a18-4dcb-8af8-3071907d8bbc

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Current Year Incidents' = ```
			
			CALCULATE([Total Incidents], 
			    FILTER(ALL(dimDate), YEAR(dimDate[Date]) = YEAR(MAX(dimDate[Date]))))
			```
		formatString: 0
		displayFolder: Core Metrics
		lineageTag: 61cd3470-1fb5-4eda-9e66-3bb86ccd4282

	measure 'Previous Year Incidents' = ```
			
			CALCULATE([Total Incidents], 
			    FILTER(ALL(dimDate), YEAR(dimDate[Date]) = YEAR(MAX(dimDate[Date])) - 1))
			```
		formatString: 0
		displayFolder: Core Metrics
		lineageTag: 4e63e5ab-ef2c-41cd-99ad-02f637299598

	measure 'YoY Change' =
			
			VAR CurrentYearValue = [Current Year Incidents]
			VAR PrevYearValue = [Previous Year Incidents]
			RETURN
			IF(PrevYearValue = 0, BLANK(), (CurrentYearValue - PrevYearValue) / PrevYearValue)
		displayFolder: Core Metrics
		lineageTag: 447d4821-10e1-4bc6-a1ba-edcd356fb478

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'YoY Change %' =
			
			FORMAT([YoY Change], "0.0%;-0.0%;0.0%")
		displayFolder: Core Metrics
		lineageTag: 23355101-a046-495e-b6ef-9f839db51598

	measure 'MTD Incidents' =
			
			CALCULATE([Total Incidents], DATESMTD(dimDate[Date]))
		formatString: 0
		displayFolder: Core Metrics
		lineageTag: f23b0fd5-ef8a-418c-b31d-fa951b0c67e2

	measure 'QTD Incidents' =
			
			CALCULATE([Total Incidents], DATESQTD(dimDate[Date]))
		formatString: 0
		displayFolder: Core Metrics
		lineageTag: 22f8cdce-f35d-41cc-9929-24fb7c1fa0af

	measure 'YTD Incidents' =
			
			CALCULATE([Total Incidents], DATESYTD(dimDate[Date]))
		formatString: 0
		displayFolder: Core Metrics
		lineageTag: 2130b3a2-2fb0-4636-ac72-8b9694e3c570

	measure 'Last 30 Days Incidents' = ```
			
			CALCULATE([Total Incidents], 
			    DATESINPERIOD(dimDate[Date], MAX(dimDate[Date]), -30, DAY))
			```
		formatString: 0
		displayFolder: Core Metrics
		lineageTag: 6150f616-5fec-4014-a742-3410573311da

	measure 'Last 90 Days Incidents' = ```
			
			CALCULATE([Total Incidents], 
			    DATESINPERIOD(dimDate[Date], MAX(dimDate[Date]), -90, DAY))
			```
		formatString: 0
		displayFolder: Core Metrics
		lineageTag: d24a45a1-68bf-43c4-b792-0e3a7e117d35

	measure 'Day Incidents' = ```
			
			CALCULATE([Total Incidents], 
			    FILTER(ALL(dimTime), dimTime[Time Category] = "Day (6-17)"))
			```
		formatString: 0
		displayFolder: Temporal Intelligence Measures
		lineageTag: a43e7773-fd46-48fd-a3cf-370bd6164d05

	measure 'Night Incidents' = ```
			
			CALCULATE([Total Incidents], 
			    FILTER(ALL(dimTime), dimTime[Time Category] = "Night (21-5)"))
			```
		formatString: 0
		displayFolder: Temporal Intelligence Measures
		lineageTag: 35199ece-c527-496e-a40b-30e49ddf3e65

	measure 'Day to Night Ratio' =
			
			DIVIDE([Day Incidents], [Night Incidents], 0)
		displayFolder: Temporal Intelligence Measures
		lineageTag: 69e09884-37d3-42a6-91b3-c5810455f7aa

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Incidents by Hour' = ```
			
			CALCULATE([Total Incidents], 
			    ALLEXCEPT(dimTime, dimTime[Hour]))
			```
		formatString: 0
		displayFolder: Temporal Intelligence Measures
		lineageTag: e0292393-2976-4941-86a5-447c57475c52

	measure 'Peak Hour' =
			
			VAR MaxCount = MAXX(ALL(dimTime[Hour]), [Incidents by Hour])
			RETURN
			MAXX(
			    FILTER(ALL(dimTime[Hour]), [Incidents by Hour] = MaxCount),
			    dimTime[Hour]
			)
		formatString: 0
		displayFolder: Temporal Intelligence Measures
		lineageTag: 251887ea-2b14-45b7-b67f-561d5f520b6d

	measure 'Weekend Incidents' = ```
			
			CALCULATE([Total Incidents], 
			    FILTER(ALL(dimDate), dimDate[Is Weekend] = TRUE))
			```
		formatString: 0
		displayFolder: Temporal Intelligence Measures
		lineageTag: b445c4fa-543f-40df-9d89-4c11d6ac20ea

	measure 'Weekday Incidents' = ```
			
			CALCULATE([Total Incidents], 
			    FILTER(ALL(dimDate), dimDate[Is Weekend] = FALSE))
			```
		formatString: 0
		displayFolder: Temporal Intelligence Measures
		lineageTag: 22274087-fcc8-4ea5-b480-d2f662540710

	measure 'Weekend Concentration' =
			
			DIVIDE([Weekend Incidents], [Total Incidents], 0)
		displayFolder: Temporal Intelligence Measures
		lineageTag: 94abda74-4714-4589-a6ee-fd4e9f5c3abb

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Monthly Seasonality Index' =
			
			VAR CurrentMonthIncidents = CALCULATE([Total Incidents], DATESMTD(dimDate[Date]))
			VAR AvgMonthlyIncidents = DIVIDE([YTD Incidents], MONTH(MAX(dimDate[Date])), 0)
			RETURN
			IF(AvgMonthlyIncidents = 0, BLANK(), CurrentMonthIncidents / AvgMonthlyIncidents)
		displayFolder: Temporal Intelligence Measures
		lineageTag: f872dc74-b99f-431d-8182-99b1043e2c0c

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Incidents by Ward' = ```
			
			CALCULATE([Total Incidents], 
			    ALLEXCEPT(CrimeIncidents, CrimeIncidents[WARD]))
			```
		formatString: 0
		displayFolder: Geographic Analysis Measures
		lineageTag: aa19f670-8f1b-44d6-874e-603193b47c90

	measure 'Incidents by District' = ```
			
			CALCULATE([Total Incidents], 
			    ALLEXCEPT(CrimeIncidents, CrimeIncidents[DISTRICT]))
			```
		formatString: 0
		displayFolder: Geographic Analysis Measures
		lineageTag: 4ccff124-a7cd-48e6-ae72-d1964b8eac49

	measure 'Incidents by PSA' = ```
			
			CALCULATE([Total Incidents], 
			    ALLEXCEPT(CrimeIncidents, CrimeIncidents[PSA]))
			```
		formatString: 0
		displayFolder: Geographic Analysis Measures
		lineageTag: fc81b739-d088-4016-b950-9c3c5bfca396

	measure 'Incidents by Neighborhood' = ```
			
			CALCULATE([Total Incidents], 
			    ALLEXCEPT(CrimeIncidents, CrimeIncidents[NEIGHBORHOOD_CLUSTER]))
			```
		formatString: 0
		displayFolder: Geographic Analysis Measures
		lineageTag: 0b31d027-0cd6-427a-b0de-f866c7a3ed16

	measure 'Geographic Concentration' = ```
			
			VAR TopWardIncidents = 
			    MAXX(ALL(CrimeIncidents[WARD]), [Incidents by Ward])
			RETURN
			DIVIDE(TopWardIncidents, [Total Incidents], 0)
			```
		displayFolder: Geographic Analysis Measures
		lineageTag: fce2ebc1-1999-4411-b53a-7205564d99d6

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Location Density' =
			
			COUNTROWS(CrimeIncidents) / DISTINCTCOUNT(CrimeIncidents[BLOCK])
		displayFolder: Geographic Analysis Measures
		lineageTag: 43e08942-b998-4546-8c20-571f77adc742

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Incidents by Offense' = ```
			
			CALCULATE([Total Incidents], 
			    ALLEXCEPT(CrimeIncidents, CrimeIncidents[OFFENSE]))
			```
		formatString: 0
		displayFolder: Crime Type Analysis Measures
		lineageTag: a3532506-38eb-4f68-83a6-6af5263188a2

	measure 'Most Common Offense' =
			
			VAR MaxCount = MAXX(ALL(CrimeIncidents[OFFENSE]), [Incidents by Offense])
			RETURN
			MAXX(
			    FILTER(ALL(CrimeIncidents[OFFENSE]), [Incidents by Offense] = MaxCount),
			    CrimeIncidents[OFFENSE]
			)
		displayFolder: Crime Type Analysis Measures
		lineageTag: 895b5843-2739-453e-a3b3-78725d46a046

	measure 'Incidents by Method' = ```
			
			CALCULATE([Total Incidents], 
			    ALLEXCEPT(CrimeIncidents, CrimeIncidents[METHOD]))
			```
		formatString: 0
		displayFolder: Crime Type Analysis Measures
		lineageTag: b030f695-234c-44fd-9389-83e8ae6e6f37

	measure 'Method Offense Correlation' = ```
			
			VAR OffenseCount = [Incidents by Offense]
			VAR MethodCount = [Incidents by Method]
			VAR JointCount = CALCULATE([Total Incidents], 
			    ALLEXCEPT(CrimeIncidents, CrimeIncidents[METHOD], CrimeIncidents[OFFENSE]))
			VAR TotalCount = [Total Incidents]
			RETURN
			DIVIDE(JointCount * TotalCount, OffenseCount * MethodCount, 0)
			```
		displayFolder: Crime Type Analysis Measures
		lineageTag: 9f096abc-abcf-476c-b902-85d08fe45528

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '30-Day Moving Average' =
			
			AVERAGEX(
			    DATESINPERIOD(dimDate[Date], MAX(dimDate[Date]), -30, DAY),
			    CALCULATE([Total Incidents], ALLEXCEPT(dimDate, dimDate[Date]))
			)
		displayFolder: Advanced Statistical Measures
		lineageTag: e9cb7d07-75b0-40f2-aaca-3ecd117d2520

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Incident Std Dev' =
			
			STDEVX.P(
			    DATESINPERIOD(dimDate[Date], MAX(dimDate[Date]), -90, DAY),
			    CALCULATE([Total Incidents], ALLEXCEPT(dimDate, dimDate[Date]))
			)
		displayFolder: Advanced Statistical Measures
		lineageTag: 4604736f-a37c-4010-8e28-a40da08d0e7f

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Daily Z-Score' =
			
			VAR DailyIncidents = CALCULATE([Total Incidents], ALLEXCEPT(dimDate, dimDate[Date]))
			VAR AvgIncidents = [30-Day Moving Average]
			VAR _StdDev = [Incident Std Dev]
			RETURN
			IF(_StdDev = 0, BLANK(), (DailyIncidents - AvgIncidents) / _StdDev)
		displayFolder: Advanced Statistical Measures
		lineageTag: bf9377fe-f9ba-42d1-af38-6d007bbbb003

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Is Anomaly' =
			
			IF(ABS([Daily Z-Score]) > 2, TRUE(), FALSE())
		formatString: """TRUE"";""TRUE"";""FALSE"""
		displayFolder: Advanced Statistical Measures
		lineageTag: bac86eac-1d78-47f1-bf75-5c20e421b8ad

	measure 'Hour Pattern Similarity' = ```
			
			VAR CurrentPattern = [Incidents by Hour]
			VAR PreviousDayPattern = CALCULATE([Incidents by Hour], 
			    DATEADD(dimDate[Date], -1, DAY))
			VAR Sum1 = SUMX(ALL(dimTime[Hour]), CurrentPattern)
			VAR Sum2 = SUMX(ALL(dimTime[Hour]), PreviousDayPattern)
			VAR SumProduct = SUMX(ALL(dimTime[Hour]), CurrentPattern * PreviousDayPattern)
			VAR SqSum1 = SUMX(ALL(dimTime[Hour]), POWER(CurrentPattern, 2))
			VAR SqSum2 = SUMX(ALL(dimTime[Hour]), POWER(PreviousDayPattern, 2))
			RETURN
			DIVIDE(
			    SumProduct,
			    SQRT(SqSum1 * SqSum2),
			    0
			)
			```
		displayFolder: Time Pattern Recognition Measures
		lineageTag: 7278c243-434c-4d80-a458-e656650036b4

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Day of Week Index' =
			
			VAR CurrentDOW = SELECTEDVALUE(dimDate[Day of Week])
			VAR AvgThisDOW = AVERAGEX(
			    FILTER(ALL(dimDate), dimDate[Day of Week] = CurrentDOW),
			    CALCULATE([Total Incidents], ALLEXCEPT(dimDate, dimDate[Date]))
			)
			VAR AvgAllDays = AVERAGEX(
			    ALL(dimDate),
			    CALCULATE([Total Incidents], ALLEXCEPT(dimDate, dimDate[Date]))
			)
			RETURN
			DIVIDE(AvgThisDOW, AvgAllDays, 1)
		displayFolder: Time Pattern Recognition Measures
		lineageTag: 106859b9-5269-44f8-8ae5-9950c0feb639

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Daily Trend' = ```
			
			VAR X = DATEDIFF(MIN(dimDate[Date]), SELECTEDVALUE(dimDate[Date]), DAY)
			VAR AvgX = AVERAGEX(ALL(dimDate), DATEDIFF(MIN(dimDate[Date]), dimDate[Date], DAY))
			VAR AvgY = AVERAGEX(ALL(dimDate), CALCULATE([Total Incidents], ALLEXCEPT(dimDate, dimDate[Date])))
			VAR SumDiffSquaredX = SUMX(ALL(dimDate), POWER(DATEDIFF(MIN(dimDate[Date]), dimDate[Date], DAY) - AvgX, 2))
			VAR SumDiffProduct = SUMX(ALL(dimDate), 
			    (DATEDIFF(MIN(dimDate[Date]), dimDate[Date], DAY) - AvgX) * 
			    (CALCULATE([Total Incidents], ALLEXCEPT(dimDate, dimDate[Date])) - AvgY)
			)
			VAR Slope = DIVIDE(SumDiffProduct, SumDiffSquaredX, 0)
			VAR Intercept = AvgY - Slope * AvgX
			RETURN
			Intercept + Slope * X
			```
		displayFolder: Predictive Measures
		lineageTag: 2d86c43e-d4ad-4669-a0a8-5326450faa4b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '7-Day Forecast' = ```
			
			VAR MaxDate = MAX(dimDate[Date])
			VAR DayNum = DATEDIFF(MIN(dimDate[Date]), MaxDate, DAY)
			VAR X = DayNum + 7
			VAR AvgX = AVERAGEX(ALL(dimDate), DATEDIFF(MIN(dimDate[Date]), dimDate[Date], DAY))
			VAR AvgY = AVERAGEX(ALL(dimDate), CALCULATE([Total Incidents], ALLEXCEPT(dimDate, dimDate[Date])))
			VAR SumDiffSquaredX = SUMX(ALL(dimDate), POWER(DATEDIFF(MIN(dimDate[Date]), dimDate[Date], DAY) - AvgX, 2))
			VAR SumDiffProduct = SUMX(ALL(dimDate), 
			    (DATEDIFF(MIN(dimDate[Date]), dimDate[Date], DAY) - AvgX) * 
			    (CALCULATE([Total Incidents], ALLEXCEPT(dimDate, dimDate[Date])) - AvgY)
			)
			VAR Slope = DIVIDE(SumDiffProduct, SumDiffSquaredX, 0)
			VAR Intercept = AvgY - Slope * AvgX
			RETURN
			Intercept + Slope * X
			```
		displayFolder: Predictive Measures
		lineageTag: 179e1906-5e29-4c09-b013-55179e8178a3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Crime Severity Weight' =
			
			SWITCH(
			    SELECTEDVALUE(CrimeIncidents[OFFENSE]),
			    "HOMICIDE", 100,
			    "ROBBERY", 60,
			    "BURGLARY", 40,
			    "THEFT/OTHER", 20,
			    "THEFT F/AUTO", 15,
			    10 // default weight
			)
		formatString: 0
		displayFolder: Crime Severity and Impact Measures
		lineageTag: 65ff434b-876e-48d3-9bdb-9dedc0b77185

	measure 'Weighted Crime Index' =
			
			SUMX(
			    CrimeIncidents,
			    CALCULATE([Crime Severity Weight])
			)
		formatString: 0
		displayFolder: Crime Severity and Impact Measures
		lineageTag: 8561e4d1-6a28-418e-82d7-a3c3e2b6c742

	measure 'Average Response Time' =
			
			AVERAGEX(
			    CrimeIncidents,
			    DATEDIFF(CrimeIncidents[REPORT_DATE], CrimeIncidents[START_DATE_ONLY], MINUTE)
			)
		displayFolder: Crime Severity and Impact Measures
		lineageTag: aead8cd0-29fe-45b4-af1d-9c72158a8478

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Cases Cleared' = ```
			// Placeholder for actual cleared cases data
			COUNTROWS(CrimeIncidents) * 0.4 // Example only - replace with actual measure
			
			```
		displayFolder: Crime Severity and Impact Measures
		lineageTag: e8d78a74-811b-454c-b94b-843022dd2a27

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Clearance Rate' =
			
			DIVIDE([Cases Cleared], [Total Incidents], 0)
		displayFolder: Crime Severity and Impact Measures
		lineageTag: 03daaaf0-25cb-451f-96ec-97683e65b874

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'SMLY Incidents' =
			
			CALCULATE([Total Incidents],
			    SAMEPERIODLASTYEAR(dimDate[Date]))
		formatString: 0
		displayFolder: Comparative Analysis Measures
		lineageTag: de6cdca7-aa1f-4d72-81a3-f74d53e61e4d

	measure 'MoM Change' = ```
			
			VAR CurrentMonth = CALCULATE([Total Incidents], DATESMTD(dimDate[Date]))
			VAR PrevMonth = CALCULATE([Total Incidents], 
			    DATEADD(DATESMTD(dimDate[Date]), -1, MONTH))
			RETURN
			DIVIDE(CurrentMonth - PrevMonth, PrevMonth, 0)
			```
		displayFolder: Comparative Analysis Measures
		lineageTag: 5e6da9ba-defe-44aa-b910-e72e48b90100

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Ward Benchmark' = ```
			
			VAR CurrentWard = SELECTEDVALUE(CrimeIncidents[WARD])
			VAR AvgOtherWards = 
			    CALCULATE(
			        DIVIDE([Total Incidents], DISTINCTCOUNT(CrimeIncidents[WARD])),
			        ALL(CrimeIncidents[WARD])
			    )
			VAR CurrentWardRate = 
			    CALCULATE([Total Incidents], CrimeIncidents[WARD] = CurrentWard)
			RETURN
			DIVIDE(CurrentWardRate, AvgOtherWards, 0)
			```
		displayFolder: Comparative Analysis Measures
		lineageTag: 5cb5b73f-1ea1-4aec-8c1a-6a1d523723e7

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Primary Insight' = ```
			
			VAR TopOffense = [Most Common Offense]
			VAR TopWard = 
			    MAXX(
			        TOPN(1, ALL(CrimeIncidents[WARD]), [Incidents by Ward], DESC),
			        CrimeIncidents[WARD]
			    )
			VAR YoYChangeVal = [YoY Change]
			VAR TrendDirection = 
			    IF([YoY Change] > 0, "increased", "decreased")
			RETURN
			"The most common offense is " & TopOffense & 
			" with the highest concentration in Ward " & TopWard & 
			". Overall incidents have " & TrendDirection & 
			" by " & FORMAT(ABS(YoYChangeVal), "0.0%") & 
			" compared to the same period last year."
			```
		displayFolder: AI-Enhanced Narrative Measures
		lineageTag: 132311ea-2983-4d9e-b7a9-9cbe622b0e5a

	measure 'Time Pattern Insight' = ```
			
			VAR PeakHourVal = [Peak Hour]
			VAR WeekendConcentrationVal = [Weekend Concentration]
			VAR WeekendEmphasis = 
			    IF(WeekendConcentrationVal > 0.3, 
			       " with significant weekend concentration", 
			       " with incidents distributed throughout the week")
			RETURN
			"Peak activity occurs around " & 
			FORMAT(PeakHourVal, "00") & ":00" & 
			WeekendEmphasis & "."
			```
		displayFolder: AI-Enhanced Narrative Measures
		lineageTag: b8a0044f-f246-4ba7-8e87-1670d89e3f5b

	column CCN
		dataType: int64
		formatString: 0
		lineageTag: e9538407-14ec-4a58-9115-52e83566f978
		summarizeBy: none
		sourceColumn: CCN

		annotation SummarizationSetBy = User

	column SHIFT
		dataType: string
		lineageTag: b40d3a07-f682-4021-b5f2-275d04ba472e
		summarizeBy: none
		sourceColumn: SHIFT

		annotation SummarizationSetBy = Automatic

	column METHOD
		dataType: string
		lineageTag: f39e8b0e-d3db-46d8-8d1e-4b460a904bf8
		summarizeBy: none
		sourceColumn: METHOD

		annotation SummarizationSetBy = Automatic

	column OFFENSE
		dataType: string
		lineageTag: 96184cde-8bc5-41f9-a28f-c86ad41cef61
		summarizeBy: none
		sourceColumn: OFFENSE

		annotation SummarizationSetBy = Automatic

	column BLOCK
		dataType: string
		lineageTag: ff990ada-1679-474a-9f24-b1ee0862c874
		summarizeBy: none
		sourceColumn: BLOCK

		annotation SummarizationSetBy = Automatic

	column XBLOCK
		dataType: double
		lineageTag: 0f341e4e-0c82-41b2-a8f8-8bede0f5afb9
		summarizeBy: none
		sourceColumn: XBLOCK

		annotation SummarizationSetBy = User

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column YBLOCK
		dataType: double
		lineageTag: cf8e3856-57d5-46e0-a28d-0f0d9496af08
		summarizeBy: none
		sourceColumn: YBLOCK

		annotation SummarizationSetBy = User

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column WARD
		dataType: int64
		formatString: 0
		lineageTag: 9a8ec469-4a55-4b72-9571-c675b7bcce2f
		summarizeBy: none
		sourceColumn: WARD

		annotation SummarizationSetBy = User

	column ANC
		dataType: string
		lineageTag: 4e0dfc75-559e-4f35-8f7b-2a17ba70cbb6
		summarizeBy: none
		sourceColumn: ANC

		annotation SummarizationSetBy = Automatic

	column DISTRICT
		dataType: int64
		formatString: 0
		lineageTag: 07ea4a6c-0b9e-4a38-bd9a-ed6277b7981b
		summarizeBy: none
		sourceColumn: DISTRICT

		annotation SummarizationSetBy = User

	column PSA
		dataType: int64
		formatString: 0
		lineageTag: 28f3c6aa-970a-4875-bdb0-73981b8ae055
		summarizeBy: none
		sourceColumn: PSA

		annotation SummarizationSetBy = User

	column NEIGHBORHOOD_CLUSTER
		dataType: string
		lineageTag: 47034757-d8ee-4264-8ee2-cd8d5b69b7ac
		summarizeBy: none
		sourceColumn: NEIGHBORHOOD_CLUSTER

		annotation SummarizationSetBy = Automatic

	column BLOCK_GROUP
		dataType: string
		lineageTag: f20ae881-cda8-4510-9b9c-ac4a3ec001a8
		summarizeBy: none
		sourceColumn: BLOCK_GROUP

		annotation SummarizationSetBy = Automatic

	column CENSUS_TRACT
		dataType: string
		lineageTag: 4755dff7-6c6e-4163-9747-ee2d13474481
		summarizeBy: none
		sourceColumn: CENSUS_TRACT

		annotation SummarizationSetBy = Automatic

	column VOTING_PRECINCT
		dataType: string
		lineageTag: 9095bd8f-1228-4f51-89db-a90647d0694b
		summarizeBy: none
		sourceColumn: VOTING_PRECINCT

		annotation SummarizationSetBy = Automatic

	column LATITUDE
		dataType: double
		lineageTag: 2c77c45f-4060-464e-af07-697d11aa8d13
		dataCategory: Latitude
		summarizeBy: sum
		sourceColumn: LATITUDE

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column LONGITUDE
		dataType: double
		lineageTag: ab602f41-62be-4641-ad45-b2ee911e9173
		dataCategory: Longitude
		summarizeBy: sum
		sourceColumn: LONGITUDE

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column BID
		dataType: string
		lineageTag: 76de81f6-1233-4f54-81b7-95394873b033
		summarizeBy: none
		sourceColumn: BID

		annotation SummarizationSetBy = Automatic

	column OBJECTID
		dataType: int64
		formatString: 0
		lineageTag: 0bb80727-eb21-4fe0-8144-860b13d8a2c7
		summarizeBy: none
		sourceColumn: OBJECTID

		annotation SummarizationSetBy = User

	column REPORT_DATE
		dataType: dateTime
		formatString: Long Date
		lineageTag: 534b570d-3a77-48a7-b0c4-42af1a5b014c
		summarizeBy: none
		sourceColumn: REPORT_DATE

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column REPORT_TIME
		dataType: dateTime
		formatString: Long Time
		lineageTag: 38ad633d-617b-415c-9945-d2848f7333f8
		summarizeBy: none
		sourceColumn: REPORT_TIME

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Time

	column START_DATE_ONLY
		dataType: dateTime
		formatString: Long Date
		lineageTag: 0e258598-73ff-4980-add4-f0a152e43a5a
		summarizeBy: none
		sourceColumn: START_DATE_ONLY

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column START_TIME
		dataType: dateTime
		formatString: Long Time
		lineageTag: e97e2921-cf58-4f9e-bf78-4c8db89af505
		summarizeBy: none
		sourceColumn: START_TIME

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Time

	column END_DATE_ONLY
		dataType: dateTime
		formatString: Long Date
		lineageTag: 39c16731-87b1-4a76-a3f7-5b4b7ef1aa2b
		summarizeBy: none
		sourceColumn: END_DATE_ONLY

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column END_TIME
		dataType: dateTime
		formatString: Long Time
		lineageTag: ce83491a-74ef-4f5b-9ae1-fa171b46042d
		summarizeBy: none
		sourceColumn: END_TIME

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Time

	column NEAREST_15M_TIME
		dataType: dateTime
		formatString: Long Time
		lineageTag: 9a2d26f0-981e-4066-846e-2f373a8173e1
		summarizeBy: none
		sourceColumn: NEAREST_15M_TIME

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Time

	partition CrimeIncidents = m
		mode: import
		source = ```
				let
				    // --- Define MapServer URL ---
				    MapServerUrl = "https://maps2.dcgis.dc.gov/dcgis/rest/services/FEEDS/MPD/MapServer",
				    
				    // --- Fetch MapServer Info to get layers ---
				    MapServerInfoUrl = MapServerUrl & "?f=json",
				    RawServerInfo = Web.Contents(MapServerInfoUrl),
				    ServerInfoJson = Json.Document(RawServerInfo),
				    
				    // --- Extract Layer Information ---
				    LayersList = ServerInfoJson[layers],
				    
				    // --- Convert to Table for easier filtering ---
				    LayersTable = Table.FromList(LayersList, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
				    ExpandedLayers = Table.ExpandRecordColumn(LayersTable, "Column1", {"id", "name", "type"}, {"id", "name", "type"}),
				    
				    // --- Filter for Feature Layers (optional - only if needed) ---
				    // You may want to filter based on layer names or types
				    // Filter example: only layers with specific name patterns indicating crime data
				    FilteredLayers = Table.SelectRows(ExpandedLayers, each Text.Contains([name], "Crime") or Text.Contains([name], "Incident") or Text.StartsWith([name], "20")),
				    
				    // --- Extract Layer IDs as text for function ---
				    LayerIdsToFetch = List.Transform(FilteredLayers[id], each Text.From(_)),
				    
				    // --- Rest of your code remains the same ---
				    // --- Invoke the function for each Layer ID ---
				    ListOfTables = List.Transform(LayerIdsToFetch, each
				        let
				             LayerId = _, // Current Layer ID from the list
				             // Attempt to get data, return null if function errors for a specific layer
				             Result = try fnGetDataForLayer(LayerId) otherwise null
				        in
				             Result
				    ),
				
				    // --- [Rest of your original code continues from here...] ---
				    ValidTables = List.Select(ListOfTables, each _ <> null),
				    CombinedData = if List.IsEmpty(ValidTables) then
				                       #table(type table [CCN=nullable Int64.Type, REPORT_DATE=nullable date, REPORT_TIME=nullable time, START_DATE_ONLY=nullable date, START_TIME=nullable time, END_DATE_ONLY=nullable date, END_TIME=nullable time, NEAREST_15M_TIME=nullable time, SHIFT=nullable text, METHOD=nullable text, OFFENSE=nullable text, BLOCK=nullable text, XBLOCK=nullable number, YBLOCK=nullable number, WARD=nullable Int64.Type, ANC=nullable text, DISTRICT=nullable Int64.Type, PSA=nullable Int64.Type, NEIGHBORHOOD_CLUSTER=nullable text, BLOCK_GROUP=nullable text, CENSUS_TRACT=nullable text, VOTING_PRECINCT=nullable text, LATITUDE=nullable number, LONGITUDE=nullable number, BID=nullable text, OBJECTID=nullable Int64.Type], {})
				                   else
				                       Table.Combine(ValidTables),
				
				    // --- [Remaining transformations code...] ---
				    SetCombinedTypes = Table.TransformColumnTypes(CombinedData,{
				        {"CCN", Int64.Type}, {"SHIFT", type text}, {"METHOD", type text}, {"OFFENSE", type text}, {"BLOCK", type text},
				        {"XBLOCK", type number}, {"YBLOCK", type number}, {"WARD", Int64.Type}, {"DISTRICT", Int64.Type}, {"ANC", type text},
				        {"PSA", Int64.Type}, {"NEIGHBORHOOD_CLUSTER", type text}, {"BLOCK_GROUP", type text}, {"CENSUS_TRACT", type text},
				        {"VOTING_PRECINCT", type text}, {"LATITUDE", type number}, {"LONGITUDE", type number}, {"BID", type text}, {"OBJECTID", Int64.Type}
				        }
				    ),
				
				    ConvertReportDate = Table.AddColumn(SetCombinedTypes, "REPORT_DATETIME", each try #datetime(1970,1,1,0,0,0) + #duration(0,0,0, Number.RoundDown([REPORT_DAT] / 1000)) otherwise null, type nullable datetime),
				    ConvertStartDate = Table.AddColumn(ConvertReportDate, "START_DATETIME", each try #datetime(1970,1,1,0,0,0) + #duration(0,0,0, Number.RoundDown([START_DATE] / 1000)) otherwise null, type nullable datetime),
				    ConvertEndDate = Table.AddColumn(ConvertStartDate, "END_DATETIME", each try #datetime(1970,1,1,0,0,0) + #duration(0,0,0, Number.RoundDown([END_DATE] / 1000)) otherwise null, type nullable datetime),
				
				    FilterValidDates = Table.SelectRows(ConvertEndDate, each [START_DATETIME] <> null and [END_DATETIME] <> null ),
				
				    AddReportDate = Table.AddColumn(FilterValidDates, "REPORT_DATE", each Date.From([REPORT_DATETIME]), type date),
				    AddReportTime = Table.AddColumn(AddReportDate, "REPORT_TIME", each Time.From([REPORT_DATETIME]), type time),
				    AddStartDate = Table.AddColumn(AddReportTime, "START_DATE_ONLY", each Date.From([START_DATETIME]), type date),
				    AddStartTime = Table.AddColumn(AddStartDate, "START_TIME", each Time.From([START_DATETIME]), type time),
				    AddEndDate = Table.AddColumn(AddStartTime, "END_DATE_ONLY", each Date.From([END_DATETIME]), type date),
				    AddEndTime = Table.AddColumn(AddEndDate, "END_TIME", each Time.From([END_DATETIME]), type time),
				    RoundToNearest15Mins = Table.AddColumn(AddEndTime, "NEAREST_15M_TIME", each let t = Time.From([START_TIME]), m = Number.Round(Time.Minute(t) / 15) * 15 in if m = 60 then #time(Time.Hour(t) + 1, 0, 0) else #time(Time.Hour(t), m, 0), type time),
				
				    RemoveOriginalDateColumns = Table.RemoveColumns(RoundToNearest15Mins,{"REPORT_DATETIME", "START_DATETIME", "END_DATETIME", "REPORT_DAT", "START_DATE", "END_DATE", "OCTO_RECORD_ID"}),
				    
				    FilterByStartDate = Table.SelectRows(RemoveOriginalDateColumns, each [START_DATE_ONLY] <> null and [START_DATE_ONLY] >= #date(2008, 1, 1)),
				
				    FinalTable = FilterByStartDate
				in
				    FinalTable
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

